# Use postgres/example user/password credentials
version: '3.1'

services:

#  db:
#    image: postgis/postgis
#    restart: unless-stopped
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    volumes:
#      - POSTGIS_DATA:/var/lib/postgresql/data
#      - TRACKS_DATA:/srv/tracksrv/tracks
#    networks:
#      db:#

#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
#      interval: 30s
#      timeout: 3s
#      retries: 30

#  adminer:
#    image: adminer
#    restart: unless-stopped
#    depends_on:
#      - db
#    ports:
#      - 8080:8080
#    networks:
#      db:

  tracksrv:
    build: .
#    depends_on:
#      - db
#    networks:
#      db:
#      docker_dmz:
    ports:
      - 8000:8000
    environment:
      # set these in your .env file
      - SERVER_HOST=${SERVER_HOST}
      - SUPERUSER=${SUPERUSER}
      - SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
      - SUPERUSER_EMAIL=${SUPERUSER_EMAIL}

# Custom network so all services can communicate using a FQDN
#networks:
#  db:
#  docker_dmz:
#    external: true

volumes:
  POSTGIS_DATA:
  TRACKS_DATA:
