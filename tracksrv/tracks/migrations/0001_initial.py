# Generated by Django 3.1.5 on 2021-01-09 14:40

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='the vessel name')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created in database')),
                ('length', models.FloatField(verbose_name='length in meters')),
                ('beam', models.FloatField(verbose_name='beam in meters')),
                ('draft', models.FloatField(verbose_name='draft in meters')),
                ('height', models.FloatField(null=True, verbose_name='height in meters')),
                ('displacement', models.FloatField(verbose_name='displacement in metric tons')),
                ('manufacturer', models.CharField(max_length=128, verbose_name='the name of the manufacturer')),
                ('model', models.CharField(max_length=128, verbose_name='the model/type of vessel as given by the manufacturer')),
                ('vtype', models.CharField(choices=[('SY', 'Sailing Yacht'), ('MB', 'motorboat (planing hull)'), ('MY', 'Motor Yacht (displacement hull)'), ('RB', 'Rudder Boat'), ('KJ', 'Kajak'), ('DG', 'Dinghy')], max_length=2)),
                ('depth_sensor_offset_x', models.FloatField(verbose_name='distance from stern in meters')),
                ('depth_sensor_offset_y', models.FloatField(verbose_name='distance from centerline in meters')),
                ('depth_sensor_offset_z', models.FloatField(verbose_name='position below waterline in meters')),
                ('gps_sensor_offset_x', models.FloatField(verbose_name='lateral offset of GPS sensor in meters')),
                ('gps_sensor_offset_y', models.FloatField(verbose_name='longitudinal offset of GPS sensor in meters')),
                ('gps_sensor_offset_z', models.FloatField(verbose_name='position above waterline in meters')),
                ('measurement_type', models.CharField(choices=[('BT', 'depth below transducer'), ('BK', 'depth below keel'), ('BW', 'depth below waterline')], max_length=2, null=True)),
                ('depth_sensor_offset_keel', models.FloatField(null=True)),
                ('depth_sensor_manufacturer', models.CharField(max_length=32, null=True)),
                ('depth_sensor_model', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date uploaded')),
                ('processing_status', models.CharField(choices=[('NEW', 'New'), ('FID', 'Format identified'), ('ING', 'Ingesting'), ('DNE', 'Done')], default='NEW', max_length=3, null=True)),
                ('rawfile', models.FileField(upload_to='raw_tracks/')),
                ('format', models.CharField(choices=[('UND', 'undetermined'), ('GPX', 'Gpx'), ('183', 'NMEA 0183'), ('OSM', 'NMEA 0183 with OSM timestamps')], default=None, max_length=3, null=True)),
                ('note', models.CharField(default=None, max_length=200, null=True, verbose_name="optional uploaders' note")),
                ('quality', models.IntegerField(default=None, null=True, verbose_name='a track quality measure from 0 (unusable) to 100 (perfect)')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.user')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.vessel')),
            ],
        ),
        migrations.CreateModel(
            name='Sounding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coord', django.contrib.gis.db.models.fields.PointField(dim=3, srid=4326)),
                ('min_level', models.PositiveSmallIntegerField(db_index=True, default=20)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.track')),
            ],
        ),
    ]
