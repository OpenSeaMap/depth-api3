# Generated by Django 3.1.4 on 2021-01-03 23:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=16, verbose_name='processing machine state')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('created_on', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='the vessel name')),
                ('created_on', models.DateTimeField(verbose_name='date created in database')),
                ('length', models.FloatField(verbose_name='length in meters')),
                ('beam', models.FloatField(verbose_name='beam in meters')),
                ('draft', models.FloatField(verbose_name='draft in meters')),
                ('displacement', models.FloatField(verbose_name='displacement in metric tons')),
                ('manufacturer', models.CharField(max_length=128, verbose_name='the name of the manufacturer')),
                ('model', models.CharField(max_length=128, verbose_name='the model/type of vessel as given by the manufacturer')),
                ('vtype', models.CharField(max_length=32, verbose_name='the type of vessel')),
                ('depth_sensor_offset_x', models.FloatField(verbose_name='lateral offset of depth sensor in meters')),
                ('depth_sensor_offset_y', models.FloatField(verbose_name='longitudinal offset of depth sensor in meters')),
                ('depth_sensor_offset_z', models.FloatField()),
                ('gps_sensor_offset_x', models.FloatField(verbose_name='lateral offset of GPS sensor in meters')),
                ('gps_sensor_offset_y', models.FloatField(verbose_name='longitudinal offset of GPS sensor in meters')),
                ('gps_sensor_offset_z', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_on', models.DateTimeField(verbose_name='date uploaded')),
                ('rawfile', models.FileField(upload_to='raw_tracks/')),
                ('note', models.CharField(max_length=200, verbose_name="optional uploaders' note")),
                ('quality', models.IntegerField(default=0, verbose_name='a track quality measure from 0 (unusable) to 100 (perfect)')),
                ('processing_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracks.processingstatus')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.user')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.vessel')),
            ],
        ),
    ]
